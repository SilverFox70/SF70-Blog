= README

This is a skeleton rails app intended for creating your own blog, just in case you enjoy re-inventing the wheel.  There is Devise authentication for users and admins. When complete, users will be able to sign-in to leave comments while admins will be able to create blog posts and manage users and their comments.

== A Tour of Your Views and Functionality
=== Blog Home Page - (views/posts/index.html.erb)

Currently this will display excerpts from the three most recent posts based on post.id, not the actual
created_at time.  "Previous" and "Next" buttons will appear at the bottom of this list as is appropriate,
allowing you to navigate through the entire list of posts.

== Getting Started 

[Needs updating as you don't actually need to do all of these steps to get up and running]

To get started, clone this repo to your local system.

Run <tt>bundler</tt> to install all of the necessary gems.  

You may need to run the following: 

Run <tt>rake db:create</tt>

Run <tt>rake db:migrate</tt>

Run <tt>rails g devise:views</tt>

Navigate to <tt>app/views/welcome</tt> and open <tt>index.html.erb</tt> in your text editor.
For you own sanity, add a "Welcome to rails-blog with auth!" line in that file and save.

Start your rails server <tt>rails s</tt>

Point your browser to <tt>localhost:3000</tt> and you should see your message.

To see all of the routes available run <tt>rake routes</tt> on the command line.  You will need to either stop your server or open a new bash window (<tt>COMMAND t</tt>)

For ActiveAdmin the gem is set to <tt>gem 'activeadmin', github: 'activeadmin'</tt> which will track the master.

The ActiveAdmin gem integrates with:
<tt>gem 'devise'</tt>
<tt>gem 'cancan'</tt>
<tt>gem 'draper'</tt>
<tt>gem 'pundit'</tt>

If you find that the User class is not linked to active_admin, then add the existing User class:

<tt>rails g active_admin:install User</tt>

To create a separate AdminUser class:
<tt>rails g active-admin:install</tt>

Next, migrate and seed the database:
<tt>rake db:migrate</tt>
<tt>rake db:seed</tt>
<tt>rails s</tt>

No you can visit <tt>http:/localhost:3000/admin</tt> and login as the default user:

User = admin@example.com
Password = password

To register and thus manage models through the admin interface:
<tt>rails g active_admin:resource MyModel</tt>

For more information on ActiveAdmin, please visit: <tt>https://github.com/activeadmin/activeadmin</tt>


You are now ready to build the rest of your app - Enjoy!


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
